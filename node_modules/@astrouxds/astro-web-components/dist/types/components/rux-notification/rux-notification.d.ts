import { EventEmitter } from '../../stencil-public-runtime';
import { Status } from '../../common/commonTypes.module';
export declare class RuxNotification {
  /**
   *  Set to true to display the Banner and begin countdown to close (if a close-after Number value is provided).
   */
  open: boolean;
  /**
   *  Message for the notification banner.
   */
  message: string;
  /**
   *  The background color. Possible values include 'off', 'standby', 'normal', 'caution', 'serious' and 'critical'. See [Astro UXDS Status System](https://astrouxds.com/patterns/status-system/).
   */
  status: Status;
  /**
   *  If provided, the banner will automatically close after this amount of time. Accepts value either in milliseconds or seconds (which will be converted to milliseconds internally), between `2000` and `10000`, or `2` and `10`, respectively. Any number provided outside of the `2000`-`10000` range will be ignored in favor of the default 2000ms delay. <br>If `closeAfter` is not passed or if it is given an undefined or `null` value, the banner will stay open until the user closes it.
   */
  closeAfter?: number;
  /**
   * Fires when the notification banner is closed
   */
  ruxClosed: EventEmitter<boolean>;
  private _timeoutRef;
  watchHandler(): void;
  connectedCallback(): void;
  private _updated;
  private _onClick;
  get _closeAfter(): number | undefined;
  render(): any;
}
