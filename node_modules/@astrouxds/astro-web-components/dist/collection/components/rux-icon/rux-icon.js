import { Component, Host, Prop, h } from '@stencil/core';
export class RuxIcon {
  constructor() {
    // eslint-disable-next-line
    this.svg = '';
    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    this.size = 'normal';
  }
  get iconLabel() {
    if (this.label) {
      return this.label;
    }
    else {
      return this.icon;
    }
  }
  render() {
    const SVG = `rux-icon-${this.icon}`;
    return (h(Host, null,
      h(SVG, { class: "icon", size: this.size, title: this.iconLabel })));
  }
  static get is() { return "rux-icon"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["rux-icon.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["rux-icon.css"]
  }; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "| 'extra-small'\n        | 'small'\n        | 'normal'\n        | 'large'\n        | 'auto'\n        | string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')"
      },
      "attribute": "size",
      "reflect": true,
      "defaultValue": "'normal'"
    },
    "icon": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": true,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The icon name"
      },
      "attribute": "icon",
      "reflect": false
    },
    "label": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string | undefined",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "The icon SVG's title attribute. Used for accessibility. If none is provided, the icon name will be used."
      },
      "attribute": "label",
      "reflect": false
    }
  }; }
}
