import { Prop, Host, Component, h, Watch } from '@stencil/core';
export class RuxStatus {
  validateStatus(newValue) {
    const statusTypes = {
      off: true,
      standby: true,
      normal: true,
      caution: true,
      serious: true,
      critical: true,
    };
    if (!statusTypes[newValue]) {
      throw new Error('valid status required');
    }
  }
  render() {
    return h(Host, { status: this.status });
  }
  static get is() { return "rux-status"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["rux-status.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["rux-status.css"]
  }; }
  static get properties() { return {
    "status": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "Status",
        "resolved": "\"caution\" | \"critical\" | \"normal\" | \"off\" | \"serious\" | \"standby\" | undefined",
        "references": {
          "Status": {
            "location": "import",
            "path": "../../common/commonTypes.module"
          }
        }
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "Sets the status symbol, valid options are critical, serious, caution, normal, standby and off"
      },
      "attribute": "status",
      "reflect": true
    }
  }; }
  static get watchers() { return [{
      "propName": "status",
      "methodName": "validateStatus"
    }]; }
}
