import { r as registerInstance, h, H as Host, g as getElement } from './index-01dd0ed8.js';

const ruxTabCss = ":host{--tab-text-color:var(--color-primary);--tab-border-color:transparent;--tab-hover-text-color:var(--color-default-text);--tab-selected-text-color:var(--color-default-text);--tab-selected-border-color:var(--color-primary);box-sizing:border-box;display:flex;align-items:center;justify-content:center;padding:0 2rem;margin:0;min-width:5rem;text-decoration:none;color:var(--tab-text-color);border-bottom:5px solid var(--tab-border-color)}:host([hidden]){display:none}:host span{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}:host([small]){min-width:2rem;border-bottom:3px solid var(--tab-border-color)}:host([small][selected]){border-bottom:solid 3px var(--tab-selected-border-color)}:host([selected]){color:var(--tab-selected-text-color);border-bottom:5px solid var(--tab-selected-border-color)}:host(:hover){color:var(--tab-hover-text-color)}:host([disabled]){color:var(--tab-text-color);opacity:var(--disabled-opacity);cursor:not-allowed}";

const RuxTab = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     *  If present, overrides which tab is selected on load / mount. By default, the first <rux-tab> item is selected.
     */
    this.selected = false;
    /**
     * If present, sets a disabled state on this tab item, indicating it cannot be selected by user action.
     */
    this.disabled = false;
  }
  connectedCallback() {
    var _a, _b;
    this.el.setAttribute('role', 'tab');
    this.el.addEventListener('click', this._clickHandler);
    if ((_b = (_a = this.el) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.getAttributeNode('small')) {
      this.el.setAttribute('small', '');
    }
  }
  _clickHandler(e) {
    if (this.disabled) {
      e.stopImmediatePropagation();
    }
  }
  render() {
    return (h(Host, { onClick: this._clickHandler }, h("slot", null)));
  }
  get el() { return getElement(this); }
};
RuxTab.style = ruxTabCss;

export { RuxTab as rux_tab };
