import { r as registerInstance, h } from './index-01dd0ed8.js';

const svgIcon = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.00001 3H22C23.1 3 24 3.9 24 5V19C24 20.1 23.1 21 22 21H7.07001C6.38001 21 5.77001 20.64 5.41001 20.12L0.370017 12.56C0.150017 12.22 0.150017 11.79 0.370017 11.45L5.41001 3.88C5.77001 3.35 6.31001 3 7.00001 3ZM7.50001 12C7.50001 12.83 8.17001 13.5 9.00001 13.5C9.83001 13.5 10.5 12.83 10.5 12C10.5 11.17 9.83001 10.5 9.00001 10.5C8.17001 10.5 7.50001 11.17 7.50001 12ZM14 13.5C13.17 13.5 12.5 12.83 12.5 12C12.5 11.17 13.17 10.5 14 10.5C14.83 10.5 15.5 11.17 15.5 12C15.5 12.83 14.83 13.5 14 13.5ZM17.5 12C17.5 12.83 18.17 13.5 19 13.5C19.83 13.5 20.5 12.83 20.5 12C20.5 11.17 19.83 10.5 19 10.5C18.17 10.5 17.5 11.17 17.5 12Z" fill="currentColor"/></svg>';

const RuxIconMore = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    this.size = 'auto';
  }
  get iconSize() {
    const sizes = {
      'extra-small': '1rem',
      small: '2rem',
      normal: '3rem',
      large: '4rem',
    };
    if (sizes[this.size]) {
      return sizes[this.size];
    }
    else {
      return this.size;
    }
  }
  render() {
    const style = {
      height: this.iconSize,
      width: this.iconSize,
    };
    return h("div", { style: style, innerHTML: svgIcon });
  }
};

export { RuxIconMore as rux_icon_more };
