import { attachShadow, h, Host, proxyCustomElement } from '@stencil/core/internal/client';

const ruxIconCss = ":host{--icon-default-color:var(--color-primary);display:inline-flex;color:var(--icon-default-color)}:host([hidden]){display:none}svg,svg>svg{height:100%;width:auto}.icon{display:inline-flex}";

const RuxIcon$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    attachShadow(this);
    // eslint-disable-next-line
    this.svg = '';
    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    this.size = 'normal';
  }
  get iconLabel() {
    if (this.label) {
      return this.label;
    }
    else {
      return this.icon;
    }
  }
  render() {
    const SVG = `rux-icon-${this.icon}`;
    return (h(Host, null, h(SVG, { class: "icon", size: this.size, title: this.iconLabel })));
  }
  static get style() { return ruxIconCss; }
};

const RuxIcon = /*@__PURE__*/proxyCustomElement(RuxIcon$1, [1,"rux-icon",{"size":[513],"icon":[1],"label":[1]}]);

export { RuxIcon };
