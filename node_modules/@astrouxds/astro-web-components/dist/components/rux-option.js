import { attachShadow, createEvent, h, Host, proxyCustomElement } from '@stencil/core/internal/client';

const ruxOptionCss = ":host{display:block}";

const RuxOption$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    attachShadow(this);
    this.optionChanged = createEvent(this, "rux-option-changed", 7);
  }
  handleValueChange() {
    this.optionChanged.emit();
  }
  connectedCallback() {
    this._handleSlotChange = this._handleSlotChange.bind(this);
  }
  _handleSlotChange() {
    this.optionChanged.emit();
  }
  render() {
    return h(Host, null, this.label ? this.label : '');
  }
  get el() { return this; }
  static get watchers() { return {
    "value": ["handleValueChange"],
    "label": ["handleValueChange"]
  }; }
  static get style() { return ruxOptionCss; }
};

const RuxOption = /*@__PURE__*/proxyCustomElement(RuxOption$1, [1,"rux-option",{"value":[1],"label":[1]}]);

export { RuxOption };
